$date
	Thu Apr 24 06:49:46 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_ForwardingUnit $end
$var wire 2 ! Forward_B [1:0] $end
$var wire 2 " Forward_A [1:0] $end
$var reg 5 # EX_MEM_Rd [4:0] $end
$var reg 1 $ EX_MEM_regWrite $end
$var reg 5 % ID_EX_Rs1 [4:0] $end
$var reg 5 & ID_EX_Rs2 [4:0] $end
$var reg 5 ' MEM_WB_Rd [4:0] $end
$var reg 1 ( MEM_WB_regWrite $end
$scope module uut $end
$var wire 5 ) EX_MEM_Rd [4:0] $end
$var wire 1 $ EX_MEM_regWrite $end
$var wire 5 * ID_EX_Rs1 [4:0] $end
$var wire 5 + ID_EX_Rs2 [4:0] $end
$var wire 5 , MEM_WB_Rd [4:0] $end
$var wire 1 ( MEM_WB_regWrite $end
$var reg 2 - Forward_A [1:0] $end
$var reg 2 . Forward_B [1:0] $end
$upscope $end
$scope task display_result $end
$var reg 2 / expected_A [1:0] $end
$var reg 2 0 expected_B [1:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
bx /
b0 .
b0 -
b100 ,
b10 +
b1 *
b11 )
1(
b100 '
b10 &
b1 %
1$
b11 #
b0 "
b0 !
$end
#10000
b10 "
b10 -
0(
b0 '
b0 ,
b101 #
b101 )
b110 &
b110 +
b101 %
b101 *
b0 0
b0 /
#20000
b1 !
b1 .
b0 "
b0 -
1(
0$
b1000 '
b1000 ,
b111 #
b111 )
b1000 &
b1000 +
b0 %
b0 *
b10 /
#30000
b10 !
b10 .
b10 "
b10 -
1$
b1010 '
b1010 ,
b1001 #
b1001 )
b1001 &
b1001 +
b1001 %
b1001 *
b1 0
b0 /
#40000
b1 "
b1 -
b1011 '
b1011 ,
b1100 #
b1100 )
b1100 &
b1100 +
b1011 %
b1011 *
b10 0
b10 /
#50000
b1 !
b1 .
b1011 &
b1011 +
b1 /
#60000
b1 0
